function put_food(self)
	self.food = {x = math.random(1, 30), y = math.random(1, 17)}
	tilemap.set_tile("#level4tilemap", "layer1", self.food.x, self.food.y, 3)        
end

function put_star(self)
	self.star = {x = math.random(1, 30), y = math.random(1, 17)}
	tilemap.set_tile("#level4tilemap", "layer1", self.star.x, self.star.y, 9)        
end

function put_power(self)
	self.power = {x = math.random(1, 30), y = math.random(1, 17)}
	tilemap.set_tile("#level4tilemap", "layer1", self.power.x, self.power.y, 10)        
end

function put_snail(self)
	self.snail = {x = math.random(1, 30), y = math.random(1, 17)}
	tilemap.set_tile("#level4tilemap", "layer1", self.power.x, self.power.y, 13)        
end 

function win(self)
	local finish = 0
	local start_x, start_y, w, h = tilemap.get_bounds("#level4tilemap")
	for x=start_x,start_x+w do
		for y=start_y,start_y+h do
			local tile = tilemap.get_tile("#level4tilemap", "layer1", x, y)
			if tile == 6 or tile == 5 or tile == 16 or tile == 22 then
				finish = finish +1
			end
		end
	end	
	if finish == 0 then
		self.alive = false
		msg.post("#level4gui", "win")
	end
end

function scoring(self)
	self.speed = self.speed + .1	
	self.score = self.score + 20
	self.count = self.count + 1
	sound.play("#eating", {delay = 0, gain = 0.5, pan = -1.0, speed = 1})
	msg.post("#level4gui", "add", {amount = self.score})
	if self.count % 4 == 0 then
		put_food(self)
	end
	if self.count%5 == 0 then
		put_star(self)
	end
	if self.count%6 == 0 then
		put_power(self)
	end
	if self.count% 13 == 0 then
		put_snail(self)
	end
end

function mushroom(self)
	self.score = self.score + 50
	msg.post("#level4gui", "add", {amount = self.score})
	sound.play("#buttonclick", {delay = 0, gain = 0.5, pan = -1.0, speed = 1})
	local tail = table.remove(self.segments, 1)
	tilemap.set_tile("#level4tilemap", "layer1", tail.x, tail.y, 1)
	local tail = table.remove(self.segments, 1)
	tilemap.set_tile("#level4tilemap", "layer1", tail.x, tail.y, 1)
	local tail = table.remove(self.segments, 1)
	tilemap.set_tile("#level4tilemap", "layer1", tail.x, tail.y, 1)
	local tail = table.remove(self.segments, 1)
	tilemap.set_tile("#level4tilemap", "layer1", tail.x, tail.y, 1)
end

function snail(self)
	self.score = self.score + 50
	self.speed = self.speed - .5
	msg.post("#level4gui", "add", {amount = self.score})
	sound.play("#buttonclick", {delay = 0, gain = 0.5, pan = -1.0, speed = 1})
end
function init(self)
	sound.play("#loading", {delay = 0, gain = 0.5, pan = -1.0, speed = 1})
	self.score  = 0
	self.count = 0
	msg.post(".", "acquire_input_focus")
	self.segments = {
		{x = 4, y = 10},
		{x = 5, y = 10},
		{x = 6, y = 10},
		{x = 7, y = 10} }
		self.dir = {x = 1, y = 0}
		self.dirqueue = {}
		self.speed = 7.0
		self.alive = true
		self.pause = false
		self.t = 0

		math.randomseed(socket.gettime())
		put_food(self)
	end


	function update(self, dt)
		local score = 50

		self.t = self.t + dt		
		if self.t >= 1.0 / self.speed and self.alive and self.pause == false then
			local newdir = table.remove(self.dirqueue, 1)

			if newdir then
				local opposite = newdir.x == -self.dir.x or newdir.y == -self.dir.y
				if not opposite then
					self.dir = newdir
				end
			end

			local head = self.segments[#self.segments]
			local newhead = {x = head.x + self.dir.x, y = head.y + self.dir.y}
			table.insert(self.segments, newhead)
			local tile = tilemap.get_tile("#level4tilemap", "layer1", newhead.x, newhead.y)

			if tile == 2 or tile == 3 or tile == 7 then
				self.alive = false
				msg.post("#level4gui", "gameover")
				sound.play("#gameover", {delay = 0, gain = 0.5, pan = -1.0, speed = 1})

			elseif tile == 6 or tile == 5 or tile == 16 or tile == 22 then
				msg.post("#", "scorecode")

			elseif tile == 9 then
				self.score = self.score + 500
				msg.post("#level4gui", "add", {amount = self.score})
				sound.play("#buttonclick", {delay = 0, gain = 0.5, pan = -1.0, speed = 1})

			elseif tile == 10 then
				msg.post("#", "mushroompower")

			elseif tile == 13 then
				msg.post("#", "slowspeed")

			else
				local tail = table.remove(self.segments, 1)
				tilemap.set_tile("#level4tilemap", "layer1", tail.x, tail.y, 1)
			end

			for i, s in ipairs(self.segments) do
				tilemap.set_tile("#level4tilemap", "layer1", s.x, s.y, 2)            
			end

			msg.post("#", "winnercode")
			self.t = 0
		end
	end

	function on_message(self, message_id, message, sender)
		-- Add message-handling code here
		-- Remove this function if not needed
		if message_id == hash("winnercode") then
			win(self)
		elseif message_id == hash("scorecode") then
			scoring(self)

		elseif message_id == hash("mushroompower") then
			mushroom(self)

		elseif message_id == hash("slowspeed") then
			snail(self)
			
		elseif message_id == hash("pausegame") then

			self.pause = true
		elseif message_id == hash("resumegame") then

			self.pause = false

		end

	end


	function on_input(self, action_id, action)
		if action_id == hash("Up") and action.pressed then
			table.insert(self.dirqueue, {x = 0, y = 1})
		elseif action_id == hash("Down") and action.pressed then
			table.insert(self.dirqueue, {x = 0, y = -1})
		elseif action_id == hash("Left") and action.pressed then
			table.insert(self.dirqueue, {x = -1, y = 0})
		elseif action_id == hash("Right") and action.pressed then
			table.insert(self.dirqueue, {x = 1, y = 0})
		elseif action_id == hash("turn") and action.pressed then
			table.insert(self.dirqueue, {x = 1, y = 0})
		end
	end